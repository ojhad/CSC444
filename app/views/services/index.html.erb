<div class="col-md-4" id="ljobscoloumn">
  <div class = "container-service-postings">
    <h1 class = "title-service-postings">Services</h1>

    <div class="range-slider">
      <h4><%= t :filterByDistance %></h4>
      <input type="text" id = "js-range-slider-distance" value="" />
    </div>

    <div class="range-slider">
      <h4><%= t :filterByAge %></h4>
      <input type="text" id = "js-range-slider-age" value="" />
    </div>

    <% if @services.length == 0 %>
        <p><%= t :noServiceSearch %></p>
    <% else %>
      <div class="container" id="ljobs">
        <% @services.each_with_index do |s, i| %>
            <div class="card-container">
              <div class="card transaction-card sjobs" data-serviceId="<%= s.id %>">
                <div class="card-body">
                  <h4 class="card-title"><%=s.main_title%></h4><br>
                  <p class="card-title">Posted By: <a href="/users/<%=s.user.id%>"><%= s.user.first_name.capitalize %> <%=s.user.last_name.capitalize%></a></p>
                  <p class="card-text">Charge: $<%=s.charge_per_hour%> <%=t :perHour%></p>
                  <p class="card-text">Skill: <%=s.title%></p>
                  <p class="card-text">Location: <%=s.city.capitalize%></p>

                  <p> Distance from me: <%=s.distance.round(2)%> kms</p>
                  <a href="/services/<%= s.id %>" class="btn btn-primary">More Details</a>
                </div>
              </div>
            </div>
        <% end %>
      </div>
    <% end %>
  </div>
</div>
<div class="col-md-8 hidden-xs" id="mapcoloumn">
    <div id="map"></div>
</div>
<script>
  $(document).ready(function() {
    $('.sjobs').click(function() {
        var sid = $(this).attr('data-serviceid');
        $.each(Gmaps.store.markers, function() {
            if (this.serviceObject.id == sid) {
                this.panTo();
                var marker = this.serviceObject;
                this.serviceObject.setAnimation(google.maps.Animation.BOUNCE);
                setTimeout(function(){ marker.setAnimation(null); }, 1500);
            }
            else this.serviceObject.setAnimation(null);
        });
    })
  });

	var $range_distane = $("#js-range-slider-distance")
	var min_distance = 0.1
	var max_distance = 100
	var from_distance = 50

	$range_distane.ionRangeSlider({
		type: "single",
		min: min_distance,
		max: max_distance,
		from: from_distance,
		postfix: "km",
		onFinish: function (data) {
        	$.ajax({
        		type: "GET",
				    url: "/services/filter",
				    data: {
				        distance: data["from"]
				    },
				    success: function(data){
           		console.log("Distance slider success")

              $("#ljobs").remove()
              $(".container-service-postings").append(data.html)
              $('.sjobs').click(function() {
                  var sid = $(this).attr('data-serviceid');
                  $.each(Gmaps.store.markers, function() {
                      if (this.serviceObject.id == sid) {
                          this.panTo();
                          var marker = this.serviceObject;
                          this.serviceObject.setAnimation(google.maps.Animation.BOUNCE);
                          setTimeout(function(){ marker.setAnimation(null); }, 1500);
                      }
                      else this.serviceObject.setAnimation(null);
                  });
              })
            }
			});
    	},
	});

	var $range_age = $("#js-range-slider-age")
	var min_age = 13
	var max_age = 19
	var from_age = 13
	var to_age = 19

	$range_age.ionRangeSlider({
    type: "double",
    min: min_age,
    max: max_age,
    from: from_age,
    to: to_age,
    step: 1,

    onFinish: function (data) {
        $.ajax({
        	type: "GET",
			    url: "/services/filter",
			    data: {
			        from_age: data["from"],
			        to_age: data["to"]
			    },
			    success: function(data){
         		console.log("Age slider success") 
            $("#ljobs").remove()
            $(".container-service-postings").append(data.html)
            $('.sjobs').click(function() {
              var sid = $(this).attr('data-serviceid');
              $.each(Gmaps.store.markers, function() {
                  if (this.serviceObject.id == sid) {
                      this.panTo();
                      var marker = this.serviceObject;
                      this.serviceObject.setAnimation(google.maps.Animation.BOUNCE);
                      setTimeout(function(){ marker.setAnimation(null); }, 1500);
                  }
                  else this.serviceObject.setAnimation(null);
              });
            })
          }
			});
    }
  });

  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
      markers = <%= raw @servicesLocations.to_json %>
      Gmaps.store = {}
      Gmaps.store.markers = markers.map(function(service) {
          marker = handler.addMarker(service);
          marker.serviceObject.set('id', service.id); // You can add other attributes using set
          return marker;
      });
      userlocation = handler.addMarkers([
          {
              "lat": <%= current_user.latitude ? current_user.latitude : 0 %>,
              "lng": <%= current_user.longitude ? current_user.longitude : 0 %>,
              "picture":{
                  "url": "http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|007FFF|000000",
                  "width": 32,
                  "height": 32
              },
              "infowindow": "Your Location"
          }
      ]);
      handler.bounds.extendWith(Gmaps.store.markers);
      handler.bounds.extendWith(userlocation);
      handler.fitMapToBounds();
  });
</script>